name: 'publish'

on:
  workflow_dispatch:
    inputs:
      OS:
        description: 'Select the Operating System to build the project for'
        required: true
        default: 'ubuntu' # Default value if none is selected
        type: choice
        options:
          - macos-arm64
          - macos-intel
          - ubuntu
          - windows

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: 'macos-arm64'
            platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - os: 'macos-intel'
            platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - os: 'ubuntu'
            platform: 'ubuntu-22.04'
            args: ''
          - os: 'windows'
            platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    # if:matrix.os == github.event.inputs.OS # Run only for the selected OS
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Targets only used on macOS runners for performance reasons.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev

      - name: install frontend dependencies
        run: npm install # Change to npm, pnpm, or bun as per your setup.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # Automatically replaces __VERSION__ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
